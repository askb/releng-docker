name: Build and Run Docker Image

on:
  push:
    branches:
      - main

jobs:
  Builder-Docker-Image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: Builder/Ubuntu/
          tags: ${{ vars.BASE_IMAGE }}:latest  
          outputs: type=docker,dest=/tmp/${{ vars.BASE_IMAGE }}.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}   
          path: /tmp/${{ vars.BASE_IMAGE }}.tar


  aaa:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: |
         docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/aaa.git" && cd /aaa && mvn clean install'
    
  yangtools:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/yangtools.git" && cd /yangtools && mvn clean install'  
            
  Integration-distribution:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://git.opendaylight.org/gerrit/integration/distribution" && cd /distribution && mvn clean install'  
  
  Serviceutils:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
  
      - name: Maven Build 
        run: docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/serviceutils.git" && cd /serviceutils && mvn clean install'  

  odlparent:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: |
         docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/odlparent.git" && cd /odlparent && mvn clean install'  
  
  Openflowplugin:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: |
         docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/openflowplugin.git" && cd /openflowplugin && mvn clean install'  
         
  Ovsdb:
    runs-on: ubuntu-latest
    needs: Builder-Docker-Image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ vars.BASE_IMAGE }}
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/${{ vars.BASE_IMAGE }}.tar
      - name: Maven Build 
        run: |
         docker run ${{ vars.BASE_IMAGE }}:latest bash -c 'git clone "https://github.com/opendaylight/ovsdb.git" && cd /ovsdb && mvn clean install'  
